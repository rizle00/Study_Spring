<?xml version="1.0" encoding ="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">

    <select id="list" resultType="notice">
--         select row_number() over(order by id) no, n.*, m.name from notice n
--             left outer join member m
--         on writer = user_id
--         order by no desc
    select * from
    (select row_number() over(order by id) no, n.*, m.name from notice n
     left outer join member m
     on writer = user_id
     <include refid="searchWhere"/>
      ) n
    where no between #{beginList} and #{endList}
    order by id desc
    </select>
    <select id="totalList" resultType="integer">
        select count(*) from notice
        <include refid="searchWhere"></include>
    </select>

    <sql id="searchWhere">
        <choose>
            <when test=" search == 'all'">
                where title like '%' || #{keyword} ||'%'
                or content like '%' || #{keyword} ||'%'
                or <include refid="writer"></include>

            </when>
            <when test=" search == 'title' or search == 'content'">
                where ${search} like '%' || #{keyword} ||'%'
            </when>
            <when test=" search == 'writer'">
                where writer in( select user_id from member
                where name like '%' || #{keyword} ||'%' )
            </when>
                
        </choose>

    </sql>

    <sql id="writer">
        writer in( select user_id from member
            where name like '%' || #{keyword} ||'%' )
    </sql>

    <select id="info" resultType="notice">
        select n.*, m.name
        from notice n
                 left outer join member m
                                 on writer = user_id
        where id = #{id}

    </select>
    <update id="read">
        update notice
        set readcnt = readcnt+1
        where id = #{id}
    </update>

    <insert id="register">
        insert into notice
        (title, content, writer, filepath, filename)
        values (#{title}, #{content}, #{writer}
               , #{filepath, jdbcType=VARCHAR} , #{filename, jdbcType=VARCHAR})
    </insert>

    <delete id="delete">
        delete from notice
        where id=#{id}
    </delete>

    <update id="update">
        update notice
        set title = #{title}, content = #{content} ,filepath =  #{filepath, jdbcType=VARCHAR} , filename = #{filename, jdbcType=VARCHAR}
        where id = #{id}
    </update>

    <!-- 공지답글등록 -->
    <insert id="replyRegister">
        insert into notice ( title, content, writer, filename, filepath, root, step, indent, rid)
        values ( #{title}, #{content}, #{writer}, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
               , #{root}, #{step}+1, #{indent}+1, #{rid} )
    </insert>

</mapper>